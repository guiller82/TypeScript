{"version":3,"sources":["System/Uri/Scheme.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;AAIH,IAAc,MAAM,CA2FnB;AA3FD,WAAc,MAAM;IAEnB;;OAEG;IACU,WAAI,GAAoB,MAAM,CAAC;IAG5C;;OAEG;IACU,UAAG,GAAmB,KAAK,CAAC;IAGzC;;OAEG;IACU,aAAM,GAAsB,QAAQ,CAAC;IAGlD;;OAEG;IACU,WAAI,GAAoB,MAAM,CAAC;IAG5C;;OAEG;IACU,YAAK,GAAqB,OAAO,CAAC;IAG/C;;OAEG;IACU,WAAI,GAAoB,MAAM,CAAC;IAG5C;;OAEG;IACU,aAAM,GAAsB,QAAQ,CAAC;IAGlD;;OAEG;IACU,WAAI,GAAoB,UAAU,CAAC;IAGhD;;OAEG;IACU,UAAG,GAAmB,SAAS,CAAC;IAG7C;;OAEG;IACU,WAAI,GAAoB,MAAM,CAAC;IAG5C;;OAEG;IACU,WAAI,GAAoB,MAAM,CAAC;IAG5C;;OAEG;IACU,aAAM,GAAsB,QAAQ,CAAC;IAElD;;OAEG;IACU,WAAI,GAAoB,MAAM,CAAC;IAE5C;;;OAGG;IACU,UAAG,GAAG,MAAM,CAAC,MAAM,CAAC;QAChC,OAAA,IAAI,EAAE,OAAA,GAAG,EAAE,OAAA,MAAM,EAAE,OAAA,IAAI,EAAE,OAAA,KAAK,EAAE,OAAA,IAAI,EAAE,OAAA,MAAM,EAAE,OAAA,IAAI,EAAE,OAAA,GAAG,EAAE,OAAA,IAAI,EAAE,OAAA,IAAI,EAAE,OAAA,MAAM,EAAE,OAAA,IAAI;KACjF,CAAC,CAAC;IAEH,iBAAwB,MAAa;QAEpC,OAAO,OAAA,GAAG,CAAC,OAAO,CAAM,MAAM,CAAC,IAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IAHe,cAAO,UAGtB,CAAA;AAEF,CAAC,EA3Fa,MAAM,GAAN,cAAM,KAAN,cAAM,QA2FnB;AAED,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAEtB,kBAAe,MAAM,CAAC","file":"Scheme.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based on: https://msdn.microsoft.com/en-us/library/system.uri.scheme%28v=vs.110%29.aspx\r\n */\r\n\r\nimport {SchemeValue} from \"./SchemeValue\";\r\n\r\nexport module Scheme {\r\n\r\n\t/**\r\n\t * The resource is a file on the local computer.\r\n\t */\r\n\texport const File:SchemeValue.File = \"file\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed through FTP.\r\n\t */\r\n\texport const FTP:SchemeValue.FTP = \"ftp\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed through the Gopher protocol.\r\n\t */\r\n\texport const GOPHER:SchemeValue.Gopher = \"gopher\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed through HTTP.\r\n\t */\r\n\texport const HTTP:SchemeValue.HTTP = \"http\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed through SSL-encrypted HTTP.\r\n\t */\r\n\texport const HTTPS:SchemeValue.HTTPS = \"https\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed through the LDAP protocol.\r\n\t */\r\n\texport const LDAP:SchemeValue.LDAP = \"ldap\";\r\n\r\n\r\n\t/**\r\n\t * The resource is an e-mail address and accessed through the SMTP protocol.\r\n\t */\r\n\texport const MAILTO:SchemeValue.MailTo = \"mailto\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed through a named pipe.\r\n\t */\r\n\texport const PIPE:SchemeValue.Pipe = \"net.pipe\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed from TCP endpoint.\r\n\t */\r\n\texport const TCP:SchemeValue.TCP = \"net.tcp\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed through the NNTP protocol.\r\n\t */\r\n\texport const NEWS:SchemeValue.NNTP = \"news\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed through the NNTP protocol.\r\n\t */\r\n\texport const NNTP:SchemeValue.NNTP = \"nntp\";\r\n\r\n\r\n\t/**\r\n\t * The resource is accessed through the TELNET protocol.\r\n\t */\r\n\texport const TELNET:SchemeValue.Telnet = \"telnet\";\r\n\r\n\t/**\r\n\t * The resource is accessed through a unique UUID endpoint name for communicating with a service.\r\n\t */\r\n\texport const UUID:SchemeValue.UUID = \"uuid\";\r\n\r\n\t/**\r\n\t * An index of possible values to validate against.\r\n\t * @type {Array}\r\n\t */\r\n\texport const All = Object.freeze([\r\n\t\tFile, FTP, GOPHER, HTTP, HTTPS, LDAP, MAILTO, PIPE, TCP, NEWS, NNTP, TELNET, UUID\r\n\t]);\r\n\r\n\texport function isValid(scheme:string):scheme is SchemeValue.Any\r\n\t{\r\n\t\treturn All.indexOf(<any>scheme)!= -1;\r\n\t}\r\n\r\n}\r\n\r\nObject.freeze(Scheme);\r\n\r\nexport default Scheme;"]}