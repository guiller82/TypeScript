{"version":3,"sources":["System/ExceptionType.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAEH;;;;;GAKG;AAGH;;GAEG;AAEH,QAAA,KAAK,GAAG,OAAO,CAAC;AAEhB;;GAEG;AAEH,QAAA,SAAS,GAAG,WAAW,CAAC;AAExB;;GAEG;AAEH,QAAA,UAAU,GAAG,YAAY,CAAC;AAG1B;;GAEG;AAEH,QAAA,cAAc,GAAG,gBAAgB,CAAC;AAElC;;GAEG;AAEH,QAAA,WAAW,GAAG,aAAa,CAAC;AAE5B;;GAEG;AAEH,QAAA,SAAS,GAAG,WAAW,CAAC;AAExB;;GAEG;AAEH,QAAA,QAAQ,GAAG,UAAU,CAAC","file":"ExceptionType.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n/*\r\n * Since the 'Error' type in JavaScript is simply {name:string, message:string},\r\n * Exception types provide a means for identifying and properly reusing 'name'.\r\n *\r\n * This is mostly for reference.\r\n */\r\n\r\n\r\n/**\r\n * An error in the eval() function has occurred.\r\n */\r\nexport const\r\nError = 'Error';\r\n\r\n/**\r\n * An error in the eval() function has occurred.\r\n */\r\nexport const\r\nEvalError = 'EvalError';\r\n\r\n/**\r\n * Out of range number value has occurred.\r\n */\r\nexport const\r\nRangeError = 'RangeError';\r\n\r\n\r\n/**\r\n * An illegal reference has occurred.\r\n */\r\nexport const\r\nReferenceError = 'ReferenceError';\r\n\r\n/**\r\n * A syntax error within code inside the eval() function has occurred. All other syntax errors are not caught by try/catch/finally, and will trigger the default browser error message associated with the error. To catch actual syntax errors, you may use the onerror event.\r\n */\r\nexport const\r\nSyntaxError = 'SyntaxError';\r\n\r\n/**\r\n * An error in the expected variable type has occurred.\r\n */\r\nexport const\r\nTypeError = 'TypeError';\r\n\r\n/**\r\n * An error when encoding or decoding the URI has occurred (ie: when calling encodeURI()).\r\n */\r\nexport const\r\nURIError = 'URIError';\r\n\r\n"]}