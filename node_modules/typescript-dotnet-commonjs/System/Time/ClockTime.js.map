{"version":3,"sources":["System/Time/ClockTime.ts"],"names":[],"mappings":"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","file":"ClockTime.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Originally based upon .NET source but with many additions and improvements.\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {TimeQuantity} from \"./TimeQuantity\";\r\nimport {IClockTime} from \"./ITimeStamp\";\r\nimport {Milliseconds, Minutes, Seconds, Ticks} from \"./HowMany\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n\r\nexport class ClockTime extends TimeQuantity implements IClockTime\r\n{\r\n\r\n\treadonly days:number;\r\n\treadonly hour:number;\r\n\treadonly minute:number;\r\n\treadonly second:number;\r\n\treadonly millisecond:number;\r\n\treadonly tick:number;\r\n\r\n\tconstructor(milliseconds:number);\r\n\tconstructor(hours:number, minutes:number, seconds?:number, milliseconds?:number);\r\n\tconstructor(...args:number[])\r\n\t{\r\n\t\tsuper(\r\n\t\t\targs.length>1\r\n\t\t\t\t? ClockTime.millisecondsFromTime(\r\n\t\t\t\targs[0] || 0,\r\n\t\t\t\targs[1] || 0,\r\n\t\t\t\targs.length>2 && args[2] || 0,\r\n\t\t\t\targs.length>3 && args[3] || 0\r\n\t\t\t)\r\n\t\t\t\t: (args.length>0 && args[0] || 0)\r\n\t\t);\r\n\r\n\t\tconst ms = Math.abs(this.getTotalMilliseconds());\r\n\t\tlet msi = Math.floor(ms);\r\n\r\n\t\tthis.tick = (ms - msi)*Ticks.Per.Millisecond;\r\n\r\n\t\tthis.days = (msi/Milliseconds.Per.Day) | 0;\r\n\t\tmsi -= this.days*Milliseconds.Per.Day;\r\n\r\n\t\tthis.hour = (msi/Milliseconds.Per.Hour) | 0;\r\n\t\tmsi -= this.hour*Milliseconds.Per.Hour;\r\n\r\n\t\tthis.minute = (msi/Milliseconds.Per.Minute) | 0;\r\n\t\tmsi -= this.minute*Milliseconds.Per.Minute;\r\n\r\n\t\tthis.second = (msi/Milliseconds.Per.Second) | 0;\r\n\t\tmsi -= this.second*Milliseconds.Per.Second;\r\n\r\n\t\tthis.millisecond = msi;\r\n\r\n\t\tObject.freeze(this);\r\n\t}\r\n\r\n\r\n\t// Static version for relative consistency.  Constructor does allow this format.\r\n\tstatic from(hours:number, minutes:number, seconds:number = 0, milliseconds:number = 0):ClockTime\r\n\t{\r\n\t\treturn new ClockTime(hours, minutes, seconds, milliseconds);\r\n\t}\r\n\r\n\tstatic millisecondsFromTime(\r\n\t\thours:number,\r\n\t\tminutes:number,\r\n\t\tseconds:number = 0,\r\n\t\tmilliseconds:number = 0):number\r\n\t{\r\n\t\tlet value = hours;\r\n\t\tvalue *= Minutes.Per.Hour;\r\n\t\tvalue += minutes;\r\n\t\tvalue *= Seconds.Per.Minute;\r\n\t\tvalue += seconds;\r\n\t\tvalue *= Milliseconds.Per.Second;\r\n\t\tvalue += milliseconds;\r\n\t\treturn value;\r\n\t}\r\n\r\n\ttoString(/*format?:string, formatProvider?:IFormatProvider*/):string\r\n\t{\r\n\t\t/* INSERT CUSTOM FORMATTING CODE HERE */\r\n\r\n\r\n\t\tconst _ = this;\r\n\t\tconst a:string[] = [];\r\n\r\n\t\tif(_.days)\r\n\t\t\ta.push(pluralize(_.days, \"day\"));\r\n\r\n\t\tif(_.hour)\r\n\t\t\ta.push(pluralize(_.hour, \"hour\"));\r\n\r\n\t\tif(_.minute)\r\n\t\t\ta.push(pluralize(_.minute, \"minute\"));\r\n\r\n\t\tif(_.second)\r\n\t\t\ta.push(pluralize(_.second, \"second\"));\r\n\r\n\t\tif(a.length>1)\r\n\t\t\ta.splice(a.length - 1, 0, \"and\");\r\n\r\n\t\treturn a.join(\", \").replace(\", and, \", \" and \");\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Temporary until the full TimeSpanFormat is available.\r\nfunction pluralize(value:number, label:string):string\r\n{\r\n\tif(Math.abs(value)!==1)\r\n\t\tlabel += \"s\";\r\n\r\n\treturn label;\r\n}\r\n\r\nexport default ClockTime;"]}