{"version":3,"sources":["System/Time/TimeSpan.ts"],"names":[],"mappings":"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","file":"TimeSpan.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Originally based upon .NET source but with many additions and improvements.\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {Type} from \"../Types\";\r\nimport {TimeUnit} from \"./TimeUnit\";\r\nimport {ClockTime} from \"./ClockTime\";\r\nimport {TimeQuantity} from \"./TimeQuantity\";\r\nimport {Milliseconds, Ticks} from \"./HowMany\";\r\nimport {ITimeMeasurement} from \"./ITimeMeasurement\";\r\nimport {ITimeQuantity} from \"./ITimeQuantity\";\r\nimport __extendsImport from \"../../extends\";\r\nimport {Lazy} from \"../Lazy\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n\r\n/**\r\n * TimeSpan expands on TimeQuantity to provide an class that is similar to .NET's TimeSpan including many useful static methods.\r\n */\r\nexport class TimeSpan extends TimeQuantity implements ITimeMeasurement\r\n{\r\n\t/**\r\n\t * The total number of ticks that represent this amount of time.\r\n\t */\r\n\treadonly ticks:number;\r\n\r\n\t/**\r\n\t * The total number of ticks that milliseconds this amount of time.\r\n\t */\r\n\treadonly milliseconds:number;\r\n\r\n\t/**\r\n\t * The total number of ticks that seconds this amount of time.\r\n\t */\r\n\treadonly seconds:number;\r\n\r\n\t/**\r\n\t * The total number of ticks that minutes this amount of time.\r\n\t */\r\n\treadonly minutes:number;\r\n\r\n\t/**\r\n\t * The total number of ticks that hours this amount of time.\r\n\t */\r\n\treadonly hours:number;\r\n\r\n\t/**\r\n\t * The total number of ticks that days this amount of time.\r\n\t */\r\n\treadonly days:number;\r\n\r\n\t// In .NET the default type is Ticks, but for JavaScript, we will use Milliseconds.\r\n\tconstructor(value:number, units:TimeUnit = TimeUnit.Milliseconds)\r\n\t{\r\n\t\tconst ms = TimeUnit.toMilliseconds(value, units);\r\n\t\tsuper(ms);\r\n\r\n\t\tthis.ticks = ms*Ticks.Per.Millisecond;\r\n\t\tthis.milliseconds = ms;\r\n\t\tthis.seconds = ms/Milliseconds.Per.Second;\r\n\t\tthis.minutes = ms/Milliseconds.Per.Minute;\r\n\t\tthis.hours = ms/Milliseconds.Per.Hour;\r\n\t\tthis.days = ms/Milliseconds.Per.Day;\r\n\r\n\t\tthis._time = Lazy.create(()=> new ClockTime(this.getTotalMilliseconds()));\r\n\r\n\t\tObject.freeze(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Provides an standard interface for acquiring the total time.\r\n\t * @returns {TimeSpan}\r\n\t */\r\n\tget total():TimeSpan\r\n\t{\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _time:Lazy<ClockTime>;\r\n\t// Instead of the confusing getTotal versus unit name, expose a 'ClockTime' value which reports the individual components.\r\n\tget time():ClockTime\r\n\t{\r\n\t\treturn this._time.value;\r\n\t}\r\n\r\n\tadd(other:ITimeQuantity):TimeSpan\r\n\t{\r\n\t\tif(Type.isNumber(other))\r\n\t\t\tthrow new Error(\r\n\t\t\t\t\"Use .addUnit(value:number,units:TimeUnit) to add a numerical value amount.  Default units are milliseconds.\\n\" +\r\n\t\t\t\t\".add only supports quantifiable time values (ITimeTotal).\"\r\n\t\t\t);\r\n\r\n\t\treturn new TimeSpan(this.getTotalMilliseconds() + other.total.milliseconds);\r\n\t}\r\n\r\n\taddUnit(value:number, units:TimeUnit = TimeUnit.Milliseconds):TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(this.getTotalMilliseconds() + TimeUnit.toMilliseconds(value, units));\r\n\t}\r\n\r\n\r\n\tstatic from(value:number, units:TimeUnit)\r\n\t{\r\n\t\treturn new TimeSpan(value, units);\r\n\t}\r\n\r\n\tstatic fromDays(value:number):TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(value, TimeUnit.Days);\r\n\t}\r\n\r\n\tstatic fromHours(value:number):TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(value, TimeUnit.Hours);\r\n\t}\r\n\r\n\tstatic fromMinutes(value:number):TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(value, TimeUnit.Minutes);\r\n\t}\r\n\r\n\tstatic fromSeconds(value:number):TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(value, TimeUnit.Seconds);\r\n\t}\r\n\r\n\tstatic fromMilliseconds(value:number):TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(value, TimeUnit.Milliseconds);\r\n\t}\r\n\r\n\tstatic fromTicks(value:number):TimeSpan\r\n\t{\r\n\t\treturn new TimeSpan(value, TimeUnit.Ticks);\r\n\t}\r\n\r\n\r\n\tstatic get zero():TimeSpan\r\n\t{\r\n\t\treturn timeSpanZero || (timeSpanZero = new TimeSpan(0));\r\n\t}\r\n}\r\n\r\n\r\nlet timeSpanZero:TimeSpan;\r\n\r\nexport default TimeSpan;"]}