{"version":3,"sources":["System/Collections/Dictionaries/OrderedStringKeyDictionary.ts"],"names":[],"mappings":"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","file":"OrderedStringKeyDictionary.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {StringKeyDictionary} from \"./StringKeyDictionary\";\r\nimport {ArgumentOutOfRangeException} from \"../../Exceptions/ArgumentOutOfRangeException\";\r\nimport {IOrderedDictionary} from \"./IDictionary\";\r\nimport {remove} from \"../Array/Utility\";\r\nimport __extendsImport from \"../../../extends\";\r\nimport {Integer} from \"../../Integer\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\nexport class OrderedStringKeyDictionary<TValue>\r\nextends StringKeyDictionary<TValue> implements IOrderedDictionary<string, TValue>\r\n{\r\n\r\n\t// noinspection JSMismatchedCollectionQueryUpdate\r\n\tprivate _order:string[] = []; // Maintains indexes.\r\n\r\n\tconstructor()\r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\r\n\tindexOfKey(key:string):number\r\n\t{\r\n\t\tconst o = this._order;\r\n\t\treturn o.length ? o.indexOf(key, 0) : -1;\r\n\t}\r\n\r\n\tgetValueByIndex(index:number):TValue\r\n\t{\r\n\t\tInteger.assertZeroOrGreater(index);\r\n\t\tconst o = this._order;\r\n\t\tif(index<o.length)\r\n\t\t\treturn this.getAssuredValue(o[index]);\r\n\r\n\t\tthrow new ArgumentOutOfRangeException('index',index);\r\n\t}\r\n\r\n\t// adding keepIndex allows for clearing a value while still retaining it's index.\r\n\tsetValue(key:string, value:TValue|undefined, keepIndex?:boolean):boolean\r\n\t{\r\n\t\t// TODO: This may be inefficient and could be improved.\r\n\t\tconst _ = this;\r\n\t\tlet exists = _.indexOfKey(key)!= -1;\r\n\t\tif(!exists && (value!==VOID0 || keepIndex))\r\n\t\t\t_._order.push(key);\r\n\t\telse if(exists && value===VOID0 && !keepIndex)\r\n\t\t\tremove(_._order, key);\r\n\r\n\t\treturn super.setValue(key, value);\r\n\t}\r\n\r\n\tsetByIndex(index:number, value:TValue|undefined):boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst order = _._order;\r\n\t\tif(index<0)\r\n\t\t\tthrow new ArgumentOutOfRangeException('index', index, 'Is less than zero.');\r\n\t\tif(index>=order.length)\r\n\t\t\tthrow new ArgumentOutOfRangeException('index', index, 'Is greater than the count.');\r\n\t\treturn _.setValue(order[index], value);\r\n\t}\r\n\r\n\t// importValues([x,y,z]);\r\n\timportValues(values:TValue[]):boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\treturn _.handleUpdate(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet changed:boolean = false;\r\n\t\t\t\tfor(let i = 0; i<values.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(_.setByIndex(i, values[i]))\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn changed;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t// setValues(x,y,z);\r\n\tsetValues(...values:TValue[]):boolean\r\n\t{\r\n\t\treturn this.importValues(values);\r\n\t}\r\n\r\n\tremoveByIndex(index:number):boolean\r\n\t{\r\n\t\treturn this.setByIndex(index, VOID0);\r\n\t}\r\n\r\n\tprotected getKeys():string[]\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst o = _._order;\r\n\t\treturn o.length && o.filter(key=> _.containsKey(key)) || [];\r\n\t}\r\n\r\n}\r\n\r\nexport default OrderedStringKeyDictionary;\r\n"]}