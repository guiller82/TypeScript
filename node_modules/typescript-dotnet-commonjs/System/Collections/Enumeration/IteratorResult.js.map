{"version":3,"sources":["System/Collections/Enumeration/IteratorResult.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAIH,IAAM,KAAK,GAAa,KAAK,CAAC,CAAC;AAE/B;IAaC,wBACC,KAAO,EACP,KAAqB,EACrB,IAAoB;QAApB,qBAAA,EAAA,YAAoB;QAEpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAG,OAAO,KAAK,IAAE,SAAS;YACzB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;aAEnB;YACC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB;QACD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IACF,qBAAC;AAAD,CA5BA,AA4BC,IAAA;AA5BY,wCAAc;AA8B3B,WAAc,cAAc;IAEd,mBAAI,GAAuB,IAAI,cAAc,CAAM,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAEpF,qBAAgD,OAAO,eAAA,IAAI,CAAC,CAAC,CAAC;IAA9C,sBAAO,UAAuC,CAAA;AAC/D,CAAC,EALa,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAK3B;AAnCY,wCAAc;AAqC3B,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;AAE9B,kBAAe,cAAc,CAAC","file":"IteratorResult.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {IIteratorResult} from \"./IIterator\";\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\nexport class IteratorResult<T> implements IIteratorResult<T>\r\n{\r\n\tpublic readonly value:T;\r\n\tpublic readonly index?:number;\r\n\tpublic readonly done:boolean;\r\n\r\n\tconstructor(\r\n\t\tvalue:T,\r\n\t\tdone:boolean)\r\n\tconstructor(\r\n\t\tvalue:T,\r\n\t\tindex?:number,\r\n\t\tdone?:boolean)\r\n\tconstructor(\r\n\t\tvalue:T,\r\n\t\tindex?:number|boolean,\r\n\t\tdone:boolean = false)\r\n\t{\r\n\t\tthis.value = value;\r\n\t\tif(typeof index=='boolean')\r\n\t\t\tthis.done = index;\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.index = index;\r\n\t\t\tthis.done = done;\r\n\t\t}\r\n\t\tObject.freeze(this);\r\n\t}\r\n}\r\n\r\nexport module IteratorResult\r\n{\r\n\texport const Done:IteratorResult<any> = new IteratorResult<any>(VOID0, VOID0, true);\r\n\r\n\texport function GetDone():IteratorResult<any> { return Done; }\r\n}\r\n\r\nObject.freeze(IteratorResult);\r\n\r\nexport default IteratorResult;"]}