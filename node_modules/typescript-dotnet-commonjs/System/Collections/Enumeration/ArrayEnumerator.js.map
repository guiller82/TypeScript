{"version":3,"sources":["System/Collections/Enumeration/ArrayEnumerator.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAEH,qDAAkD;AAClD,qCAAiC;AACjC,4CAA+C;AAC/C,oCAAoC;AACpC,IAAM,SAAS,GAAG,iBAAe,CAAC;AAElC;IAAwC,mCAAkB;IAIzD,yBAAY,cAAkB,EAAE,KAAgB,EAAE,IAAe;QAAjC,sBAAA,EAAA,SAAgB;QAAE,qBAAA,EAAA,QAAe;eAEhE,kBACC;YAEC,IAAM,KAAK,GAAG,YAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC;YAClF,OAAO;gBACN,MAAM,EAAE,KAAK;gBACb,OAAO,EAAE,KAAK;gBACd,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,EAAE,IAAI;aACV,CAAC;QACH,CAAC,CACD;IACF,CAAC;IACF,sBAAC;AAAD,CAnBA,AAmBC,CAnBuC,iCAAe,GAmBtD;AAnBY,0CAAe;AAqB5B,kBAAe,eAAe,CAAC","file":"ArrayEnumerator.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {IndexEnumerator} from \"./IndexEnumerator\";\r\nimport {Type} from \"../../Types\";\r\nimport __extendsImport from \"../../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nexport class ArrayEnumerator<T> extends IndexEnumerator<T>\r\n{\r\n\tconstructor(arrayFactory:() => ArrayLike<T>, start?:number, step?:number);\r\n\tconstructor(array:ArrayLike<T>, start?:number, step?:number);\r\n\tconstructor(arrayOrFactory:any, start:number = 0, step:number = 1)\r\n\t{\r\n\t\tsuper(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tconst array = Type.isFunction(arrayOrFactory) ? arrayOrFactory() : arrayOrFactory;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsource: array,\r\n\t\t\t\t\tpointer: start,\r\n\t\t\t\t\tlength: array ? array.length : 0,\r\n\t\t\t\t\tstep: step\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ArrayEnumerator;"]}