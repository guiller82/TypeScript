{"version":3,"sources":["System/Collections/Enumeration/EnumeratorBase.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAEH,qCAAiC;AACjC,kEAA+D;AAC/D,0DAAuD;AAKvD,mDAAgD;AAChD,4CAA+C;AAE/C,oCAAoC;AACpC,IAAM,SAAS,GAAG,iBAAe,CAAC;AAElC,IAAM,KAAK,GAAa,KAAK,CAAC,CAAC;AAE/B,IAAI,WAAoC,CAAC;AAGzC,mCAAmC;AACnC,iBAAiB,OAAqB;IAErC,IAAG,CAAC,WAAW;QACd,WAAW;cACR,IAAI,uBAAU,CAAe,EAAE,EAAE,cAAI,OAAA,IAAI,OAAO,EAAO,EAAlB,CAAkB,EAAE,UAAA,CAAC,IAAE,OAAA,CAAC,CAAC,UAAU,EAAE,EAAd,CAAc,CAAC,CAAC;IAChF,IAAG,CAAC,OAAO;QAAE,OAAO,WAAW,CAAC,IAAI,EAAE,CAAC;IACvC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC1B,CAAC;AAED;IAAA;QAES,aAAQ,GAAe,KAAK,CAAC;QAC7B,WAAM,GAAU,GAAG,CAAC;IA2B7B,CAAC;IAzBA,sBAAI,4BAAO;aAAX,cAA4B,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,qEAAqE;;;;OAAtE;IAEnD,sBAAI,0BAAK;aAAT,cAAqB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;;OAAA;IAE1C,6BAAW,GAAX,UAAY,KAAO;QAElB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;YACpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;YAEhB,IAAI,CAAC,MAAM,EAAE,CAAC;QACf,OAAO,IAAI,CAAC;IACb,CAAC;IAED,4BAAU,GAAV;QAEC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,OAAO,KAAK,CAAC;IACd,CAAC;IAED,yBAAO,GAAP;QAEC,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IACF,cAAC;AAAD,CA9BA,AA8BC,IAAA;AAKD,IAAM,IAAI,GAAG,gBAAgB,CAAC;AAE9B,kDAAkD;AAClD,+DAA+D;AAC/D;IAAuC,kCAAc;IA6BpD,wBACS,YAAyB,EACzB,WAA0C,EAClD,QAA8B,EAC9B,SAAkB;QAJnB,YAMC,kBAAM,IAAI,CAAC,SAWX;QAhBQ,kBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAW,GAAX,WAAW,CAA+B;QAKlD,KAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAG,YAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YAC3B,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;aACxB,IAAG,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC/B,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;;YAE3B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAEzB,IAAG,YAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC3B,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;IAC5B,CAAC;IAtCD,sBAAI,mCAAO;aAAX;YAEC,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxB,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;QACvB,CAAC;;;OAAA;IAED,sBAAI,iCAAK;aAAT;YAEC,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;QAC1B,CAAC;;;OAAA;IAqCD,sBAAI,qCAAS;QANb;;;;;WAKG;aACH;YAEC,OAAO,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;;;OAAA;IAED;;OAEG;IACH,8BAAK,GAAL;QAEC,IAAM,CAAC,GAAG,IAAI,CAAC;QACf,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,IAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;QACrB,CAAC,CAAC,QAAQ,GAAG,SAAS,CAAC;QAEvB,CAAC,CAAC,MAAM,iBAAyB,CAAC;QAElC,IAAG,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,iCAAiC;IACpD,CAAC;IAEO,wCAAe,GAAvB;QACC,IAAM,CAAC,GAAG,IAAI,CAAC;QACf,QAAO,CAAC,CAAC,MAAM,EACf;YACC;gBACC,CAAC,CAAC,eAAe,CAAC,kDAAkD,CAAC,CAAC;gBACtE,MAAM;YACP;gBACC,CAAC,CAAC,eAAe,CAAC,wCAAwC,CAAC,CAAC;gBAC5D,MAAM;SACP;IACF,CAAC;IAED;;;OAGG;IACH,sCAAa,GAAb,UAAc,GAAa;QAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAG,IAAI,CAAC,MAAM,mBAAyB,EAAE;YACxC,GAAG,CAAI,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED,sBAAI,uCAAW;aAAf;YACC,OAAO,IAAI,CAAC,MAAM,oBAA4B,CAAC;QAChD,CAAC;;;OAAA;IAED;;;OAGG;IACH,iCAAQ,GAAR;QAEC,IAAM,CAAC,GAAG,IAAI,CAAC;QAEf,CAAC,CAAC,eAAe,EAAE,CAAC;QAEpB,IACA;YACC,QAAO,CAAC,CAAC,MAAM,EACf;gBACC;oBACC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,IAAI,OAAO,EAAE,CAAC;oBACrC,CAAC,CAAC,MAAM,iBAAyB,CAAC;oBAClC,IAAM,WAAW,GAAG,CAAC,CAAC,YAAY,CAAC;oBACnC,IAAG,WAAW;wBACb,WAAW,EAAE,CAAC;gBAChB,eAAe;gBACf;oBACC,IAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAS,CAAC,EAC7B;wBACC,OAAO,IAAI,CAAC;qBACZ;yBAED;wBACC,IAAI,CAAC,OAAO,EAAE,CAAC;wBACf,CAAC,CAAC,MAAM,oBAA4B,CAAC;wBACrC,OAAO,KAAK,CAAC;qBACb;gBACF;oBACC,OAAO,KAAK,CAAC;aACd;SACD;QACD,OAAM,CAAC,EACP;YACC,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,CAAC,CAAC,MAAM,kBAA0B,CAAC;YACnC,MAAM,CAAC,CAAC;SACR;IACF,CAAC;IAED;;;OAGG;IACH,oCAAW,GAAX,UAAY,GAAa;QACxB,IAAG,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnB,GAAG,CAAI,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC;SACZ;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IAED,kCAAS,GAAT;QAEC,OAAO,IAAI,CAAC,QAAQ,EAAE;YACrB,CAAC,CAAC,IAAI,CAAC,OAAO;YACd,CAAC,CAAC,KAAK,CAAC;IACV,CAAC;IAED;;OAEG;IACH,6BAAI,GAAJ;QAEC,OAAO,IAAI,CAAC,QAAQ,EAAE;YACrB,CAAC,CAAC,IAAI,+BAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC;YAC9C,CAAC,CAAC,+BAAc,CAAC,IAAI,CAAA;IACvB,CAAC;IAED,4BAAG,GAAH;QACC,IAAI,CAAC,mBAAmB,qBAA6B,CAAC;IACvD,CAAC;IAID,kCAAQ,GAAR,UAAS,KAAU;QAElB,IAAM,CAAC,GAAG,IAAI,CAAC;QACf,CAAC,CAAC,eAAe,EAAE,CAAC;QAEpB,IACA;YACC,OAAO,KAAK,KAAG,KAAK,IAAI,CAAC,CAAC,MAAM,sBAA4B,IAAI,CAAC,CAAC,MAAM,wBAA8B;gBACrG,CAAC,CAAC,+BAAc,CAAC,IAAI;gBACrB,CAAC,CAAC,IAAI,+BAAc,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAC1C;gBAED;YACC,CAAC,CAAC,GAAG,EAAE,CAAC;SACR;IACF,CAAC;IAEO,4CAAmB,GAA3B,UAA4B,KAAqB;QAChD,IAAM,CAAC,GAAG,IAAI,CAAC;QACf,IAAG,CAAC,CAAC,CAAC,WAAW,EAAE;YAClB,CAAC,CAAC,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;SACjB;IACF,CAAC;IAES,mCAAU,GAApB;QAEC,IAAM,CAAC,GAAG,IAAI,CAAC;QACf,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;QACrB,IAAM,QAAQ,GAAG,CAAC,CAAC,SAAS,CAAC;QAE7B,CAAC,CAAC,YAAY,GAAQ,IAAI,CAAC;QAC3B,CAAC,CAAC,SAAS,GAAQ,IAAI,CAAC;QAGxB,IAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;QACrB,CAAC,CAAC,QAAQ,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,MAAM,mBAA2B,CAAC;QAEvC,IAAG,CAAC;YAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QAEjB,IAAG,QAAQ;YACV,QAAQ,EAAE,CAAC;IACb,CAAC;IAEF,qBAAC;AAAD,CArOA,AAqOC,CArOsC,+BAAc,GAqOpD;AArOY,wCAAc;AAuO3B,kBAAe,cAAc,CAAC","file":"EnumeratorBase.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {Type} from \"../../Types\";\r\nimport {DisposableBase} from \"../../Disposable/DisposableBase\";\r\nimport {ObjectPool} from \"../../Disposable/ObjectPool\";\r\nimport {IDisposable} from \"../../Disposable/IDisposable\";\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {IIteratorResult} from \"./IIterator\";\r\nimport {IYield} from \"./IYield\";\r\nimport {IteratorResult} from \"./IteratorResult\";\r\nimport __extendsImport from \"../../../extends\";\r\nimport {Action, Closure} from \"../../FunctionTypes\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\nlet yielderPool:ObjectPool<Yielder<any>>;\r\nfunction yielder():Yielder<any>;\r\nfunction yielder(recycle?:Yielder<any>):void;\r\n//noinspection JSUnusedLocalSymbols\r\nfunction yielder(recycle?:Yielder<any>):Yielder<any>|void\r\n{\r\n\tif(!yielderPool)\r\n\t\tyielderPool\r\n\t\t\t= new ObjectPool<Yielder<any>>(40, ()=>new Yielder<any>(), y=>y.yieldBreak());\r\n\tif(!recycle) return yielderPool.take();\r\n\tyielderPool.add(recycle);\r\n}\r\n\r\nclass Yielder<T> implements IYield<T>, IDisposable\r\n{\r\n\tprivate _current:T|undefined = VOID0;\r\n\tprivate _index:number = NaN;\r\n\r\n\tget current():T|undefined { return this._current; } // this class is not entirely local/private.  Still needs protection.\r\n\r\n\tget index():number { return this._index; }\r\n\r\n\tyieldReturn(value:T):boolean\r\n\t{\r\n\t\tthis._current = value;\r\n\t\tif(isNaN(this._index))\r\n\t\t\tthis._index = 0;\r\n\t\telse\r\n\t\t\tthis._index++;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tyieldBreak():boolean\r\n\t{\r\n\t\tthis._current = VOID0;\r\n\t\tthis._index = NaN;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tdispose():void\r\n\t{\r\n\t\tthis.yieldBreak();\r\n\t}\r\n}\r\n\r\n// IEnumerator State\r\nconst enum EnumeratorState { Before, Active, Completed, Faulted, Interrupted, Disposed }\r\n\r\nconst NAME = \"EnumeratorBase\";\r\n\r\n// \"Enumerator\" is conflict JScript's \"Enumerator\"\r\n// Naming this class EnumeratorBase to avoid collision with IE.\r\nexport class EnumeratorBase<T> extends DisposableBase implements IEnumerator<T>\r\n{\r\n\r\n\tprivate _yielder:Yielder<T>|undefined;\r\n\t// @ts-ignore;\r\n\tprivate _state:EnumeratorState;\r\n\tprivate _disposer:Closure|undefined;\r\n\r\n\tget current():T|undefined\r\n\t{\r\n\t\tconst y = this._yielder;\r\n\t\treturn y && y.current;\r\n\t}\r\n\r\n\tget index():number\r\n\t{\r\n\t\tconst y = this._yielder;\r\n\t\treturn y ? y.index : NaN;\r\n\t}\r\n\r\n\tconstructor(\r\n\t\tinitializer:Closure|null,\r\n\t\ttryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tisEndless?:boolean);\r\n\tconstructor(\r\n\t\tinitializer:Closure|null,\r\n\t\ttryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tdisposer?:Closure|null,\r\n\t\tisEndless?:boolean);\r\n\tconstructor(\r\n\t\tprivate _initializer:Closure|null,\r\n\t\tprivate _tryGetNext:(yielder:IYield<T>) => boolean,\r\n\t\tdisposer?:Closure|boolean|null,\r\n\t\tisEndless?:boolean)\r\n\t{\r\n\t\tsuper(NAME);\r\n\t\tthis.reset();\r\n\t\tif(Type.isBoolean(isEndless))\r\n\t\t\tthis._isEndless = isEndless;\r\n\t\telse if(Type.isBoolean(disposer))\r\n\t\t\tthis._isEndless = disposer;\r\n\t\telse\r\n\t\t\tthis._isEndless = false;\r\n\r\n\t\tif(Type.isFunction(disposer))\r\n\t\t\tthis._disposer = disposer;\r\n\t}\r\n\r\n\tprotected _isEndless:boolean;\r\n\t/*\r\n\t * Provides a mechanism to indicate if this enumerable never ends.\r\n\t * If set to true, some operations that expect a finite result may throw.\r\n\t * Explicit false means it has an end.\r\n\t * Implicit void means unknown.\r\n\t */\r\n\tget isEndless():boolean|undefined\r\n\t{\r\n\t\treturn this._isEndless;\r\n\t}\r\n\r\n\t/**\r\n\t * Added for compatibility but only works if the enumerator is active.\r\n\t */\r\n\treset():void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tconst y = _._yielder;\r\n\t\t_._yielder = undefined;\r\n\r\n\t\t_._state = EnumeratorState.Before;\r\n\r\n\t\tif(y) yielder(y); // recycle until actually needed.\r\n\t}\r\n\r\n\tprivate _assertBadState() {\r\n\t\tconst _ = this;\r\n\t\tswitch(_._state)\r\n\t\t{\r\n\t\t\tcase EnumeratorState.Faulted:\r\n\t\t\t\t_.throwIfDisposed(\"This enumerator caused a fault and was disposed.\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase EnumeratorState.Disposed:\r\n\t\t\t\t_.throwIfDisposed(\"This enumerator was manually disposed.\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Passes the current value to the out callback if the enumerator is active.\r\n\t * Note: Will throw ObjectDisposedException if this has faulted or manually disposed.\r\n\t */\r\n\ttryGetCurrent(out:Action<T>):boolean {\r\n\t\tthis._assertBadState();\r\n\t\tif(this._state===EnumeratorState.Active) {\r\n\t\t\tout(<T>this.current);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tget canMoveNext():boolean {\r\n\t\treturn this._state < EnumeratorState.Completed;\r\n\t}\r\n\r\n\t/**\r\n\t * Safely moves to the next entry and returns true if there is one.\r\n\t * Note: Will throw ObjectDisposedException if this has faulted or manually disposed.\r\n\t */\r\n\tmoveNext():boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\r\n\t\t_._assertBadState();\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\tswitch(_._state)\r\n\t\t\t{\r\n\t\t\t\tcase EnumeratorState.Before:\r\n\t\t\t\t\t_._yielder = _._yielder || yielder();\r\n\t\t\t\t\t_._state = EnumeratorState.Active;\r\n\t\t\t\t\tconst initializer = _._initializer;\r\n\t\t\t\t\tif(initializer)\r\n\t\t\t\t\t\tinitializer();\r\n\t\t\t\t// fall through\r\n\t\t\t\tcase EnumeratorState.Active:\r\n\t\t\t\t\tif(_._tryGetNext(_._yielder!))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.dispose();\r\n\t\t\t\t\t\t_._state = EnumeratorState.Completed;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(e)\r\n\t\t{\r\n\t\t\tthis.dispose();\r\n\t\t\t_._state = EnumeratorState.Faulted;\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves to the next entry and emits the value through the out callback.\r\n\t * Note: Will throw ObjectDisposedException if this has faulted or manually disposed.\r\n\t */\r\n\ttryMoveNext(out:Action<T>):boolean {\r\n\t\tif(this.moveNext()) {\r\n\t\t\tout(<T>this.current);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tnextValue():T|undefined\r\n\t{\r\n\t\treturn this.moveNext()\r\n\t\t\t? this.current\r\n\t\t\t: VOID0;\r\n\t}\r\n\r\n\t/**\r\n\t * Exposed for compatibility with generators.\r\n\t */\r\n\tnext():IIteratorResult<T>\r\n\t{\r\n\t\treturn this.moveNext()\r\n\t\t\t? new IteratorResult(this.current, this.index)\r\n\t\t\t: IteratorResult.Done\r\n\t}\r\n\r\n\tend():void {\r\n\t\tthis._ensureDisposeState(EnumeratorState.Interrupted);\r\n\t}\r\n\r\n\t'return'():IIteratorResult<void>\r\n\t'return'<TReturn>(value:TReturn):IIteratorResult<TReturn>\r\n\t'return'(value?:any):IIteratorResult<any>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_._assertBadState();\r\n\r\n\t\ttry\r\n\t\t{\r\n\t\t\treturn value===VOID0 || _._state===EnumeratorState.Completed || _._state===EnumeratorState.Interrupted\r\n\t\t\t\t? IteratorResult.Done\r\n\t\t\t\t: new IteratorResult(value, VOID0, true);\r\n\t\t}\r\n\t\tfinally\r\n\t\t{\r\n\t\t\t_.end();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _ensureDisposeState(state:EnumeratorState):void {\r\n\t\tconst _ = this;\r\n\t\tif(!_.wasDisposed) {\r\n\t\t\t_.dispose();\r\n\t\t\t_._state = state;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_._isEndless = false;\r\n\t\tconst disposer = _._disposer;\r\n\r\n\t\t_._initializer = <any>null;\r\n\t\t_._disposer = <any>null;\r\n\r\n\r\n\t\tconst y = _._yielder;\r\n\t\t_._yielder = undefined;\r\n\t\tthis._state = EnumeratorState.Disposed;\r\n\r\n\t\tif(y) yielder(y);\r\n\r\n\t\tif(disposer)\r\n\t\t\tdisposer();\r\n\t}\r\n\r\n}\r\n\r\nexport default EnumeratorBase;\r\n"]}