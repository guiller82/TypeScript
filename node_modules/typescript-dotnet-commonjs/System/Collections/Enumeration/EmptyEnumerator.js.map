{"version":3,"sources":["System/Collections/Enumeration/EmptyEnumerator.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAIH,mDAAgD;AAChD,6CAA0C;AAE1C,IAAM,KAAK,GAAa,KAAK,CAAC,CAAC;AAG/B;;;GAGG;AAEU,QAAA,eAAe,GAAoB,MAAM,CAAC,MAAM,CAAC;IAC7D,OAAO,EAAE,KAAK;IACd,QAAQ,EAAE,qBAAS,CAAC,KAAK;IACzB,WAAW,EAAE,qBAAS,CAAC,KAAK;IAC5B,SAAS,EAAE,qBAAS,CAAC,KAAK;IAC1B,IAAI,EAAE,+BAAc,CAAC,OAAO;IAC5B,QAAQ,EAAE,+BAAc,CAAC,OAAO;IAChC,GAAG,EAAE,qBAAS,CAAC,KAAK;IACpB,KAAK,EAAE,qBAAS,CAAC,KAAK;IACtB,OAAO,EAAE,qBAAS,CAAC,KAAK;IACxB,SAAS,EAAE,KAAK;CAChB,CAAC,CAAC;AACH,kBAAe,uBAAe,CAAC","file":"EmptyEnumerator.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\n\r\nimport {IEnumerator} from \"./IEnumerator\";\r\nimport {IteratorResult} from \"./IteratorResult\";\r\nimport {Functions} from \"../../Functions\";\r\n\r\nconst VOID0:undefined = void 0;\r\n\r\n\r\n/**\r\n * A simplified stripped down enumerable that is always complete and has no results.\r\n * Frozen and exported as 'empty' to allow for reuse.\r\n */\r\n\r\nexport const EmptyEnumerator:IEnumerator<any> = Object.freeze({\r\n\tcurrent: VOID0,\r\n\tmoveNext: Functions.False,\r\n\ttryMoveNext: Functions.False,\r\n\tnextValue: Functions.Blank,\r\n\tnext: IteratorResult.GetDone,\r\n\t\"return\": IteratorResult.GetDone,\r\n\tend: Functions.Blank,\r\n\treset: Functions.Blank,\r\n\tdispose: Functions.Blank,\r\n\tisEndless: false\r\n});\r\nexport default EmptyEnumerator;"]}