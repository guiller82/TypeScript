{"version":3,"sources":["System/Collections/Array/shuffle.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAIH;;;GAGG;AACH,iBAA0D,MAAQ;IAEjE,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;IACtB,OAAM,EAAE,CAAC,EACT;QACC,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACtB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;KACjB;IACD,OAAO,MAAM,CAAC;AACf,CAAC;AAXD,0BAWC","file":"shuffle.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {ArrayLikeWritable} from \"./ArrayLikeWritable\";\r\n\r\n/**\r\n * Randomize array element order in-place.\r\n * Using Durstenfeld shuffle algorithm.\r\n */\r\nexport function shuffle<T extends ArrayLikeWritable<any>>(target:T):T\r\n{\r\n\tlet i = target.length;\r\n\twhile(--i)\r\n\t{\r\n\t\tconst j = Math.floor(Math.random()*(i + 1));\r\n\t\tconst temp = target[i];\r\n\t\ttarget[i] = target[j];\r\n\t\ttarget[j] = temp;\r\n\t}\r\n\treturn target;\r\n}\r\n\r\n"]}