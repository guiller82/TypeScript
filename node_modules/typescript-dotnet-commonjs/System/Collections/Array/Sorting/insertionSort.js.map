{"version":3,"sources":["System/Collections/Array/Sorting/insertionSort.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAGH,mFAAgF;AAGhF;;;;GAIG;AACH,uBAAwF,MAAa;IAEpG,IAAG,CAAC,MAAM;QAAE,MAAM,IAAI,6CAAqB,CAAC,QAAQ,CAAC,CAAC;IACtD,IAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;IAE1B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAC,GAAG,EAAE,CAAC,EAAE,EACzB;QACC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,SAAO,CAAC;QAErB,OAAM,CAAC,GAAC,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,EAC3C;YACC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YACvB,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YAClB,CAAC,EAAE,CAAC;SACJ;KACD;IAED,OAAO,MAAM,CAAC;AAEf,CAAC;AApBD,sCAoBC","file":"insertionSort.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {Primitive} from \"../../../Primitive\";\r\nimport {ArgumentNullException} from \"../../../Exceptions/ArgumentNullException\";\r\nimport {ArrayLikeWritable} from \"../ArrayLikeWritable\";\r\n\r\n/**\r\n * https://en.wikipedia.org/wiki/Insertion_sort\r\n * @param target\r\n * @returns {T[]}\r\n */\r\nexport function insertionSort<T extends Primitive, TArray extends ArrayLikeWritable<T>>(target:TArray):TArray\r\n{\r\n\tif(!target) throw new ArgumentNullException(\"target\");\r\n\tconst len = target.length;\r\n\r\n\tfor(let i = 1; i<len; i++)\r\n\t{\r\n\t\tlet j = i, j1:number;\r\n\r\n\t\twhile(j>0 && target[(j1 = j - 1)]>target[j])\r\n\t\t{\r\n\t\t\tlet swap = target[j];\r\n\t\t\ttarget[j] = target[j1];\r\n\t\t\ttarget[j1] = swap;\r\n\t\t\tj--;\r\n\t\t}\r\n\t}\r\n\r\n\treturn target;\r\n\r\n}\r\n"]}