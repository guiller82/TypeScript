{"version":3,"sources":["System/Threading/deferImmediate.ts"],"names":[],"mappings":"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","file":"deferImmediate.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based on code from: https://github.com/kriskowal/q\r\n */\r\n\r\nimport {Type} from \"../Types\";\r\nimport {LinkedNodeList} from \"../Collections/LinkedNodeList\";\r\nimport {Queue} from \"../Collections/Queue\";\r\nimport {Closure} from \"../FunctionTypes\";\r\nimport {ILinkedNode} from \"../Collections/ILinkedListNode\";\r\nimport {ICancellable} from \"./ICancellable\";\r\nimport {ObjectPool} from \"../Disposable/ObjectPool\";\r\nimport {isNodeJS} from \"../Environment\";\r\n\r\ndeclare module process\r\n{\r\n\texport function nextTick(callback:Closure):void;\r\n\r\n\texport function toString():string;\r\n}\r\n\r\ninterface IDomain\r\n{\r\n\tenter():void;\r\n\texit():void;\r\n}\r\n\r\ninterface ITaskQueueEntry extends ILinkedNode<ITaskQueueEntry>\r\n{\r\n\ttask:Function;\r\n\tdomain?:IDomain;\r\n\tcontext?:any;\r\n\targs?:any[];\r\n\tcanceller:()=>boolean;\r\n}\r\n\r\n\r\nlet requestTick:()=>void;\r\nlet flushing:boolean = false;\r\n\r\n// Use the fastest possible means to execute a task in a future turn\r\n// of the event loop.\r\n\r\n\r\nfunction flush():void\r\n{\r\n\t/* jshint loopfunc: true */\r\n\tlet entry:ITaskQueueEntry|null;\r\n\twhile(entry = immediateQueue.first)\r\n\t{\r\n\t\tlet {task, domain, context, args} = entry;\r\n\t\tentry.canceller();\r\n\t\tif(domain) domain.enter();\r\n\t\trunSingle(task, domain, context, args);\r\n\t}\r\n\r\n\twhile(laterQueue.tryDequeue(task=>{\r\n\t\trunSingle(task);\r\n\t})){}\r\n\r\n\r\n\tflushing = false;\r\n}\r\n\r\n\r\n// linked list of tasks.  Using a real linked list to allow for removal.\r\nconst immediateQueue = new LinkedNodeList<ITaskQueueEntry>();\r\n\r\n// queue for late tasks, used by unhandled rejection tracking\r\nconst laterQueue = new Queue<Closure>();\r\n\r\nconst entryPool = new ObjectPool<ITaskQueueEntry>(40,\r\n\t() => <any>{},\r\n\t(o:any) =>\r\n\t{\r\n\t\to.task = null;\r\n\t\to.domain = null;\r\n\t\to.context = null;\r\n\t\tif(o.args) o.args.length = 0;\r\n\t\to.args = null;\r\n\t\to.canceller = null;\r\n\t});\r\n\r\nfunction runSingle(task:Function, domain?:IDomain, context?:any, params?:any[]):void\r\n{\r\n\ttry\r\n\t{\r\n\t\ttask.apply(context, params);\r\n\t}\r\n\tcatch(e)\r\n\t{\r\n\t\tif(isNodeJS)\r\n\t\t{\r\n\t\t\t// In node, uncaught exceptions are considered fatal errors.\r\n\t\t\t// Re-throw them synchronously to interrupt flushing!\r\n\r\n\t\t\t// Ensure continuation if the uncaught exception is suppressed\r\n\t\t\t// listening \"uncaughtException\" events (as domains does).\r\n\t\t\t// Continue in next event to avoid tick recursion.\r\n\t\t\tif(domain)\r\n\t\t\t{\r\n\t\t\t\tdomain.exit();\r\n\t\t\t}\r\n\t\t\tsetTimeout(flush, 0);\r\n\t\t\tif(domain)\r\n\t\t\t{\r\n\t\t\t\tdomain.enter();\r\n\t\t\t}\r\n\r\n\t\t\tthrow e;\r\n\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// In browsers, uncaught exceptions are not fatal.\r\n\t\t\t// Re-throw them asynchronously to avoid slow-downs.\r\n\t\t\tsetTimeout(()=>\r\n\t\t\t{\r\n\t\t\t\tthrow e;\r\n\t\t\t}, 0);\r\n\t\t}\r\n\t}\r\n\r\n\tif(domain)\r\n\t{\r\n\t\tdomain.exit();\r\n\t}\r\n}\r\n\r\nfunction requestFlush():void\r\n{\r\n\tif(!flushing)\r\n\t{\r\n\t\tflushing = true;\r\n\t\trequestTick();\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport function deferImmediate(task:Closure, context?:any):ICancellable\r\nexport function deferImmediate(task:Function, context?:any, args?:any[]):ICancellable\r\n//noinspection JSValidateJSDoc\r\n/**\r\n *\r\n * @param task\r\n * @param context\r\n * @param args\r\n * @returns ICancellable\r\n */\r\nexport function deferImmediate(task:Closure|Function, context?:any, args?:any[]):ICancellable\r\n{\r\n\tlet entry:ITaskQueueEntry = entryPool.take();\r\n\tentry.task = task;\r\n\tentry.domain = isNodeJS && (<any>process)['domain'];\r\n\tentry.context = context;\r\n\tentry.args = args && args.slice();\r\n\tentry.canceller = ()=>\r\n\t{\r\n\t\tif(!entry) return false;\r\n\t\tlet r = Boolean(immediateQueue.removeNode(entry));\r\n\t\tentryPool.add(entry);\r\n\t\treturn r;\r\n\t};\r\n\r\n\timmediateQueue.addNode(entry);\r\n\r\n\trequestFlush();\r\n\r\n\treturn {\r\n\t\tcancel: entry.canceller,\r\n\t\tdispose: ()=> { entry && entry.canceller(); }\r\n\t}\r\n}\r\n\r\n\r\n// runs a task after all other tasks have been run\r\n// this is useful for unhandled rejection tracking that needs to happen\r\n// after all `then`d tasks have been run.\r\nexport function runAfterDeferred(task:Closure):void\r\n{\r\n\tlaterQueue.enqueue(task);\r\n\trequestFlush();\r\n}\r\n\r\nif(isNodeJS)\r\n{\r\n\trequestTick = ()=>\r\n\t{\r\n\t\tprocess.nextTick(flush);\r\n\t};\r\n\r\n}\r\nelse if(typeof setImmediate===Type.FUNCTION)\r\n{\r\n\t// In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\r\n\tif(typeof window!==Type.UNDEFINED)\r\n\t{\r\n\t\trequestTick = setImmediate.bind(window, flush);\r\n\t}\r\n\telse\r\n\t{\r\n\t\trequestTick = ()=>\r\n\t\t{\r\n\t\t\tsetImmediate(flush);\r\n\t\t};\r\n\t}\r\n\r\n}\r\nelse if(typeof MessageChannel!==Type.UNDEFINED)\r\n{\r\n\t// modern browsers\r\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\r\n\tconst channel = new MessageChannel();\r\n\t// At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\r\n\t// working message ports the first time a page loads.\r\n\tchannel.port1.onmessage = function()\r\n\t{\r\n\t\trequestTick = requestPortTick;\r\n\t\tchannel.port1.onmessage = flush;\r\n\t\tflush();\r\n\t};\r\n\tlet requestPortTick = ()=>\r\n\t{\r\n\t\t// Opera requires us to provide a message payload, regardless of\r\n\t\t// whether we use it.\r\n\t\tchannel.port2.postMessage(0);\r\n\t};\r\n\trequestTick = ()=>\r\n\t{\r\n\t\tsetTimeout(flush, 0);\r\n\t\trequestPortTick();\r\n\t};\r\n\r\n}\r\nelse\r\n{\r\n\t// old browsers\r\n\trequestTick = ()=>\r\n\t{\r\n\t\tsetTimeout(flush, 0);\r\n\t};\r\n}\r\n\r\nexport default deferImmediate;"]}