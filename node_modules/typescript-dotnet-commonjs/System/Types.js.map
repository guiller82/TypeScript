{"version":3,"sources":["System/Types.ts"],"names":[],"mappings":"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","file":"Types.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {Primitive} from \"./Primitive\";\r\nimport {TypeValue} from \"./TypeValue\";\r\nimport {ArrayLikeWritable} from \"./Collections/Array/ArrayLikeWritable\";\r\n\r\nconst\r\n\tVOID0      = <undefined>void(0),\r\n\t_BOOLEAN   = <TypeValue.Boolean>typeof true,\r\n\t_NUMBER    = <TypeValue.Number>typeof 0,\r\n\t_STRING    = <TypeValue.String>typeof \"\",\r\n\t_SYMBOL    = <TypeValue.Symbol>\"symbol\",\r\n\t_OBJECT    = <TypeValue.Object>typeof {},\r\n\t_UNDEFINED = <TypeValue.Undefined>typeof VOID0,\r\n\t_FUNCTION  = <TypeValue.Function>typeof function() {},\r\n\tLENGTH     = <string>\"length\";\r\n\r\n// Only used for primitives.\r\nconst typeInfoRegistry:{[key:string]:TypeInfo} = {};\r\n\r\n/**\r\n * Exposes easy access to type information including inquiring about members.\r\n */\r\nexport class TypeInfo\r\n{\r\n\t// Not retained for primitives. Since they have no members.\r\n\tprotected readonly target:any;\r\n\r\n\treadonly type:string;\r\n\r\n\treadonly isBoolean:boolean;\r\n\treadonly isNumber:boolean;\r\n\treadonly isFinite:boolean;\r\n\treadonly isValidNumber:boolean;\r\n\treadonly isString:boolean;\r\n\treadonly isTrueNaN:boolean;\r\n\treadonly isObject:boolean;\r\n\treadonly isArray:boolean;\r\n\treadonly isFunction:boolean;\r\n\treadonly isUndefined:boolean;\r\n\treadonly isNull:boolean;\r\n\treadonly isNullOrUndefined:boolean;\r\n\treadonly isPrimitive:boolean;\r\n\treadonly isSymbol:boolean;\r\n\r\n\tconstructor(target:any, onBeforeFreeze?:(instance:any)=>void)\r\n\t{\r\n\t\tthis.isBoolean = false;\r\n\t\tthis.isNumber = false;\r\n\t\tthis.isFinite = false;\r\n\t\tthis.isValidNumber = false;\r\n\t\tthis.isString = false;\r\n\t\tthis.isTrueNaN = false;\r\n\t\tthis.isObject = false;\r\n\t\tthis.isFunction = false;\r\n\t\tthis.isUndefined = false;\r\n\t\tthis.isNull = false;\r\n\t\tthis.isPrimitive = false;\r\n\t\tthis.isSymbol = false;\r\n\t\tthis.isArray = false;\r\n\t\tthis.isNullOrUndefined = false;\r\n\r\n\t\tswitch(this.type = typeof target)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\t\tthis.isBoolean = true;\r\n\t\t\t\tthis.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _NUMBER:\r\n\t\t\t\tthis.isNumber = true;\r\n\t\t\t\tthis.isTrueNaN = isNaN(target);\r\n\t\t\t\tthis.isFinite = isFinite(target);\r\n\t\t\t\tthis.isValidNumber = !this.isTrueNaN;\r\n\t\t\t\tthis.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _STRING:\r\n\t\t\t\tthis.isString = true;\r\n\t\t\t\tthis.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _SYMBOL:\r\n\t\t\t\tthis.isSymbol = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\tthis.target = target;\r\n\t\t\t\tif(target===null)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.isNull = true;\r\n\t\t\t\t\tthis.isNullOrUndefined = true;\r\n\t\t\t\t\tthis.isPrimitive = true;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.isArray = (target) instanceof (Array);\r\n\t\t\t\t\tthis.isObject = true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\tthis.target = target;\r\n\t\t\t\tthis.isFunction = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\tthis.isUndefined = true;\r\n\t\t\t\tthis.isNullOrUndefined = true;\r\n\t\t\t\tthis.isPrimitive = true;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Fatal type failure.  Unknown type: \" + this.type;\r\n\t\t}\r\n\r\n\t\tif(onBeforeFreeze) onBeforeFreeze(this);\r\n\t\tObject.freeze(this);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any member or non-member,\r\n\t * where non-members are of type undefined.\r\n\t * @param name\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tmember(name:string|number|symbol):TypeInfo\r\n\t{\r\n\t\tconst t = this.target;\r\n\t\treturn TypeInfo.getFor(\r\n\t\t\tt && (name) in (t)\r\n\t\t\t\t? t[name]\r\n\t\t\t\t: VOID0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo for any target object.\r\n\t * If the target object is of a primitive type, it returns the TypeInfo instance assigned to that type.\r\n\t * @param target\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\tstatic getFor(target:any):TypeInfo\r\n\t{\r\n\t\tconst type:string = typeof target;\r\n\t\tswitch(type)\r\n\t\t{\r\n\t\t\tcase _OBJECT:\r\n\t\t\tcase _FUNCTION:\r\n\t\t\t\treturn new TypeInfo(target);\r\n\t\t}\r\n\t\tlet info = typeInfoRegistry[type];\r\n\t\tif(!info) typeInfoRegistry[type] = info = new TypeInfo(target);\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the target matches the type (instanceof).\r\n\t * @param type\r\n\t * @returns {boolean}\r\n\t */\r\n\tis<T>(type:{new (...params:any[]):T}):boolean\r\n\t{\r\n\t\treturn this.target instanceof type;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns null if the target does not match the type (instanceof).\r\n\t * Otherwise returns the target as the type.\r\n\t * @param type\r\n\t * @returns {T|null}\r\n\t */\r\n\tas<T>(type:{new (...params:any[]):T}):T|null\r\n\t{\r\n\t\treturn this.target instanceof type ? this.target : null\r\n\t}\r\n\r\n}\r\n\r\nexport function Type(target:any):TypeInfo\r\n{\r\n\treturn new TypeInfo(target);\r\n}\r\n\r\nexport module Type\r\n{\r\n\t/**\r\n\t * typeof true\r\n\t * @type {string}\r\n\t */\r\n\texport const BOOLEAN:TypeValue.Boolean = _BOOLEAN;\r\n\r\n\t/**\r\n\t * typeof 0\r\n\t * @type {string}\r\n\t */\r\n\texport const NUMBER:TypeValue.Number = _NUMBER;\r\n\r\n\t/**\r\n\t * typeof \"\"\r\n\t * @type {string}\r\n\t */\r\n\texport const STRING:TypeValue.String = _STRING;\r\n\r\n\t/**\r\n\t * typeof {}\r\n\t * @type {string}\r\n\t */\r\n\texport const OBJECT:TypeValue.Object = _OBJECT;\r\n\r\n\r\n\t/**\r\n\t * typeof Symbol\r\n\t * @type {string}\r\n\t */\r\n\texport const SYMBOL:TypeValue.Symbol = _SYMBOL;\r\n\r\n\t/**\r\n\t * typeof undefined\r\n\t * @type {string}\r\n\t */\r\n\texport const UNDEFINED:TypeValue.Undefined = _UNDEFINED;\r\n\r\n\t/**\r\n\t * typeof function\r\n\t * @type {string}\r\n\t */\r\n\texport const FUNCTION:TypeValue.Function = _FUNCTION;\r\n\r\n\t/**\r\n\t * Returns true if the target matches the type (instanceof).\r\n\t * @param target\r\n\t * @param type\r\n\t * @returns {T|null}\r\n\t */\r\n\texport function is<T>(target:Object, type:{new (...params:any[]):T}):target is T\r\n\t{\r\n\t\treturn target instanceof type;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns null if the target does not match the type (instanceof).\r\n\t * Otherwise returns the target as the type.\r\n\t * @param target\r\n\t * @param type\r\n\t * @returns {T|null}\r\n\t */\r\n\texport function as<T>(target:Object, type:{new (...params:any[]):T}):T|null\r\n\t{\r\n\t\treturn target instanceof type ? target : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is null or undefined.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isNullOrUndefined(value:any):value is null|undefined\r\n\t{\r\n\t\treturn value==null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a boolean.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isBoolean(value:any):value is boolean\r\n\t{\r\n\t\treturn typeof value===_BOOLEAN;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a number.\r\n\t * @param value\r\n\t * @param ignoreNaN Default is false. When true, NaN is not considered a number and will return false.\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isNumber(value:any, ignoreNaN:boolean = false):value is number\r\n\t{\r\n\t\treturn typeof value===_NUMBER && (!ignoreNaN || !isNaN(value));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if is a number and is NaN.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isTrueNaN(value:any):value is number\r\n\t{\r\n\t\treturn typeof value===_NUMBER && isNaN(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a string.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isString(value:any):value is string\r\n\t{\r\n\t\treturn typeof value===_STRING;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value is a boolean, string, number, null, or undefined.\r\n\t * @param value\r\n\t * @param allowUndefined if set to true will return true if the value is undefined.\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isPrimitive(value:any, allowUndefined:boolean = false):value is Primitive\r\n\t{\r\n\t\tconst t = typeof value;\r\n\t\tswitch(t)\r\n\t\t{\r\n\t\t\tcase _BOOLEAN:\r\n\t\t\tcase _STRING:\r\n\t\t\tcase _NUMBER:\r\n\t\t\t\treturn true;\r\n\t\t\tcase _UNDEFINED:\r\n\t\t\t\treturn allowUndefined;\r\n\t\t\tcase _OBJECT:\r\n\t\t\t\treturn value===null;\r\n\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * For detecting if the value can be used as a key.\r\n\t * @param value\r\n\t * @param allowUndefined\r\n\t * @returns {boolean|boolean}\r\n\t */\r\n\texport function isPrimitiveOrSymbol(\r\n\t\tvalue:any,\r\n\t\tallowUndefined:boolean = false):value is Primitive|symbol\r\n\t{\r\n\t\treturn typeof value===_SYMBOL ? true : isPrimitive(value, allowUndefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value is a string, number, or symbol.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isPropertyKey(value:any):value is string|number|symbol\r\n\t{\r\n\t\tconst t = typeof value;\r\n\t\tswitch(t)\r\n\t\t{\r\n\t\t\tcase _STRING:\r\n\t\t\tcase _NUMBER:\r\n\t\t\tcase _SYMBOL:\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is a function.\r\n\t * @param value\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isFunction(value:any):value is Function\r\n\t{\r\n\t\treturn typeof value===_FUNCTION;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the value parameter is an object.\r\n\t * @param value\r\n\t * @param allowNull If false (default) null is not considered an object.\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function isObject(value:any, allowNull:boolean = false):boolean\r\n\t{\r\n\t\treturn typeof value===_OBJECT && (allowNull || value!==null);\r\n\t}\r\n\r\n\t/**\r\n\t * Guarantees a number value or NaN instead.\r\n\t * @param value\r\n\t * @returns {number}\r\n\t */\r\n\texport function numberOrNaN(value:any):number\r\n\t{\r\n\t\treturn isNaN(value) ? NaN : value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a TypeInfo object for the target.\r\n\t * @param target\r\n\t * @returns {TypeInfo}\r\n\t */\r\n\texport function of(target:any):TypeInfo\r\n\t{\r\n\t\treturn TypeInfo.getFor(target);\r\n\t}\r\n\r\n\t/**\r\n\t * Will detect if a member exists (using 'in').\r\n\t * Returns true if a property or method exists on the object or its prototype.\r\n\t * @param instance\r\n\t * @param property Name of the member.\r\n\t * @param ignoreUndefined When ignoreUndefined is true, if the member exists but is undefined, it will return false.\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function hasMember(instance:any, property:string, ignoreUndefined:boolean = true):boolean\r\n\t{\r\n\t\treturn instance && !isPrimitive(instance) && (property) in (instance) && (ignoreUndefined || instance[property]!==VOID0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the member matches the type.\r\n\t * @param instance\r\n\t * @param property\r\n\t * @param type\r\n\t * @returns {boolean}\r\n\t */\r\n\texport function hasMemberOfType<T>(\r\n\t\tinstance:any, property:string,\r\n\t\ttype:TypeValue):instance is T\r\n\t{\r\n\t\treturn hasMember(instance, property) && typeof(instance[property])===type;\r\n\t}\r\n\r\n\texport function hasMethod<T>(instance:any, property:string):instance is T\r\n\t{\r\n\t\treturn hasMemberOfType<T>(instance, property, _FUNCTION);\r\n\t}\r\n\r\n\texport function isArrayLike<T>(instance:any):instance is ArrayLikeWritable<T>\r\n\t{\r\n\t\t/*\r\n\t\t * NOTE:\r\n\t\t *\r\n\t\t * Functions:\r\n\t\t * Enumerating a function although it has a .length property will yield nothing or unexpected results.\r\n\t\t * Effectively, a function is not like an array.\r\n\t\t *\r\n\t\t * Strings:\r\n\t\t * Behave like arrays but don't have the same exact methods.\r\n\t\t */\r\n\t\treturn instance instanceof Array\r\n\t\t\t|| Type.isString(instance)\r\n\t\t\t|| !Type.isFunction(instance) && hasMember(instance, LENGTH);\r\n\t}\r\n}\r\n\r\nObject.freeze(Type);\r\n\r\nexport default Type;\r\n\r\n"]}