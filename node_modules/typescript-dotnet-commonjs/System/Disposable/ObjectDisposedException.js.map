{"version":3,"sources":["System/Disposable/ObjectDisposedException.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;AAEH,qFAAyF;AAEzF,yCAA4C;AAC5C,oCAAoC;AACpC,IAAM,SAAS,GAAG,iBAAe,CAAC;AAGlC,IAAM,IAAI,GAAU,yBAAyB,CAAC;AAI9C;IAA6C,2CAAyB;IAMrE,+DAA+D;IAC/D,iCACC,UAAiB,EACjB,OAAe,EACf,cAAqB;eAErB,kBAAM,OAAO,IAAI,EAAE,EAAE,cAAc,EAAE,UAAC,CAAC;YAEhC,CAAE,CAAC,UAAU,GAAG,UAAU,CAAC;QAClC,CAAC,CAAC;IACH,CAAC;IAGS,yCAAO,GAAjB;QAEC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,0CAAQ,GAAR;QAEC,IAAM,CAAC,GAAG,IAAI,CAAC;QACf,IAAI,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC;QACzB,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAE1C,OAAO,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC;IACtD,CAAC;IAEM,uCAAe,GAAtB,UACC,UAA2B,EAC3B,UAAiB,EACjB,OAAe;QAEf,IAAG,UAAU,CAAC,WAAW;YACxB,MAAM,IAAI,uBAAuB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC;IACb,CAAC;IAEF,8BAAC;AAAD,CA3CA,AA2CC,CA3C4C,qDAAyB,GA2CrE;AA3CY,0DAAuB;AA6CpC,kBAAe,uBAAuB,CAAC","file":"ObjectDisposedException.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n * Based upon: https://msdn.microsoft.com/en-us/library/System.Exception%28v=vs.110%29.aspx\r\n */\r\n\r\nimport {Error, InvalidOperationException} from \"../Exceptions/InvalidOperationException\";\r\nimport {IDisposableAware} from \"./IDisposableAware\";\r\nimport __extendsImport from \"../../extends\";\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n\r\nconst NAME:string = 'ObjectDisposedException';\r\n\r\nexport {Error};\r\n\r\nexport class ObjectDisposedException extends InvalidOperationException\r\n{\r\n\r\n\t//@ts-ignore\r\n\treadonly objectName:string;\r\n\r\n\t// For simplicity and consistency, lets stick with 1 signature.\r\n\tconstructor(\r\n\t\tobjectName:string,\r\n\t\tmessage?:string,\r\n\t\tinnerException?:Error)\r\n\t{\r\n\t\tsuper(message || '', innerException, (_)=>\r\n\t\t{\r\n\t\t\t(<any>_).objectName = objectName;\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tprotected getName():string\r\n\t{\r\n\t\treturn NAME;\r\n\t}\r\n\r\n\ttoString():string\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet oName = _.objectName;\r\n\t\toName = oName ? ('{' + oName + '} ') : '';\r\n\r\n\t\treturn '[' + _.name + ': ' + oName + _.message + ']';\r\n\t}\r\n\r\n\tstatic throwIfDisposed(\r\n\t\tdisposable:IDisposableAware,\r\n\t\tobjectName:string,\r\n\t\tmessage?:string):true|never\r\n\t{\r\n\t\tif(disposable.wasDisposed)\r\n\t\t\tthrow new ObjectDisposedException(objectName, message);\r\n\t\treturn true;\r\n\t}\r\n\r\n}\r\n\r\nexport default ObjectDisposedException;"]}